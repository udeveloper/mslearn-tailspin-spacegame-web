# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
-  '*'

pool:
 vmImage : 'ubuntu-16.04'
 demands:
  npm

variables:
  buildConfiguration: 'Release'
  wwwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkversion: '3.1.100'

steps:
  - task: UseDotNet@2
    displayName: 'Obtener Version SDK 3.1.100' 
    inputs:
      version: $(dotnetSdkversion)
      packageType: sdk

  - task: Npm@1
    displayName: 'Restaurar Dependcias Package.json'
    inputs:
      verbose: false

  - script: './node_modules/.bin/node-sass $(wwwwrootDir) --output $(wwwwrootDir)'
    displayName: 'Compila Archivos Sass'

  - task: Gulp@1
    displayName: 'Minificacion Archivos js y css'

  - script: 'echo "$(Build.DefinitionName),$(Build.BuildId),$(Build.BuildNumber)" >  buildInfo.txt'
    displayName: 'Escribir Informacion del Build'
    workingDirectory: $(wwwwrootDir)

  - task: DotNetCoreCLI@2
    displayName: 'Restaurar Dependecias NuGet'
    inputs:
      command: restore
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'Build de proyectos - $(buildConfiguration)'
    inputs:
      command: build
      arguments: '--no-restore --configuration $(buildConfiguration)'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: "Publish Proyecto - $(buildConfiguration)"
    inputs:
      command: publish
      arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
      projects: '**/*.csproj'
      publishWebProjects: false
      zipAfterPublish: true
  
  - task: PublishBuildArtifacts@1
    displayName: 'Publicando Artefactos en SpaceWeb'
    condition: succeeded()
    inputs:
      ArtifactName: SpaceWebArtifacts